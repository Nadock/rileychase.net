# Welcome to Serverless!
#
# For full config options, check the docs:
#    docs.serverless.com

service: rileychase-net

custom:
  region: ${env:AWS_DEFAULT_REGION , "ap-southeast-2"}
  stage: ${env:STAGE, "dev"}
  output:
    file: .build/stack.json

provider:
  name: aws
  runtime: python3.7
  stage: ${self:custom.stage}
  region: ${self:custom.region}

resources:
  Resources:
    WebsiteBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: rileychase.net-${self:custom.stage}
    WebsiteLogsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: rileychase.net-logs-${self:custom.stage}
    # CloudFront Distribution for website
    WebsiteCFDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          DefaultCacheBehavior:
            AllowedMethods:
              - GET
              - HEAD
            TargetOriginId:
              Ref: WebsiteBucket
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: none
            ViewerProtocolPolicy: redirect-to-https
          DefaultRootObject: index.html
          Enabled: true
          HttpVersion: http2
          Origins:
            - DomainName:
                Fn::Join:
                  - ""
                  - - Ref: WebsiteBucket
                    - ".s3.amazonaws.com"
              Id:
                Ref: WebsiteBucket
              S3OriginConfig:
                OriginAccessIdentity:
                  Fn::Join:
                    - ""
                    - - origin-access-identity/cloudfront/
                      - Ref: DistributionOAI
          PriceClass: PriceClass_All
          Logging:
            Bucket:
              Fn::Join:
                  - ""
                  - - Ref: WebsiteLogsBucket
                    - ".s3.amazonaws.com"
          Aliases:
            - rileychase.net
            - dev.rileychase.net
          # ViewerCertificate:
          #   AcmCertificateArn: #TODO: wait for AWS Support to up out limit so we can provision the correct cert
          #   SslSupportMethod: sni-only
    # Access configuration so the CF Distribution can access the content in S3
    DistributionOAI:
      Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
      Properties:
        CloudFrontOriginAccessIdentityConfig:
          Comment: rileychase.net
    DistributionOAIBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: WebsiteBucket
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                CanonicalUser:
                  Fn::GetAtt:
                    - DistributionOAI
                    - S3CanonicalUserId
              Action:
                - s3:GetObject
              Resource:
                Fn::Join:
                  - ""
                  - - "arn:aws:s3:::"
                    - Ref: WebsiteBucket
                    - /*
