# https://taskfile.dev
version: '3'


dotenv:
  - .env


tasks:
  ci:
    desc: Run all tasks required to merge code into the main branch
    cmds:
      - task: ruff:check
      - task: pytest
      - task: mypy
      - task: mdlint
      - task: build
      - task: validate:links
      - task: aws:lint

  ruff:check:
    desc: Check linting and formatting of Python sources with `astral-sh/ruff`.
    cmds:
      - uv run ruff check {{.CLI_ARGS}} .
      - uv run ruff format --check {{.CLI_ARGS}} .

  ruff:fix:
    desc: Fix linting errors in Python sources with `astral-sh/ruff`.
    cmds:
      - uv run ruff check --fix {{.CLI_ARGS}} .
      - uv run ruff format {{.CLI_ARGS}} .

  mypy:
    desc: Run python/mypy Python type checking tool
    cmds:
      - uv run mypy {{.CLI_ARGS}} ./weaving

  pytest:
    desc: Run unit tests via pytest-dev/pytest
    cmds:
      - uv run pytest {{.CLI_ARGS}} ./weaving

  mdlint:
    desc: Lint markdown sources with DavidAnson/markdownlint
    cmds:
      - npx markdownlint '**/*.md' {{.CLI_ARGS}} --ignore node_modules --ignore .mypy_cache --ignore .pytest_cache --ignore-path 'pages/debug/markdown.md'

  dev:
    desc: Run weaving in local dev mode
    cmds:
      - uv run python -m weaving --include-debug --site-name rileychase.net --locale en_AU dev {{.CLI_ARGS}}

  build:
    desc: Run weaving in single build mode
    cmds:
      - uv run python -m weaving --site-name rileychase.net --locale en_AU build --host rileychase.net {{.CLI_ARGS}}

  validate:
    desc: Run the inbuilt weaving validator
    cmds:
      - uv run python -m weaving validate {{.CLI_ARGS}}

  validate:links:
    desc: Run the inbuilt weaving validator with dead link detection enabled
    deps:
      - build
    cmds:
      - uv run python -m weaving validate --dead-links --allow-link 'https://www.linkedin.com/.*' --allow-link 'https://zendesk.com' --allow-link 'https://www.canva.com' {{.CLI_ARGS}}

  deploy:
    desc: Deploy the built site to S3
    cmds:
      - aws s3 sync ./output s3://{{ .BUCKET_NAME }}/website --exclude "**/*.md" --delete
      - aws cloudfront create-invalidation --distribution-id {{ .DISTRIBUTION_ID }} --path "/*"

  emoji:
    desc: Update emoji files
    cmds:
      - ./weaving/emoji/update.sh

  aws:lint:
    desc: Run cfn-lint across all templates
    cmds:
      - uv run cfn-lint --include-checks I -- ./aws/**/*.yml

  aws:website:validate:
    desc: Validate the website_cfn.yml CloudFormation template
    sources:
      - aws/website_cfn.yml
    cmds:
      - aws cloudformation validate-template --template-body file://./aws/website_cfn.yml

  aws:website:deploy:
    desc: Deploy the website_cfn.yml CloudFormation template
    deps:
      - aws:website:validate
    cmds:
      - |
        aws cloudformation deploy --template-file ./aws/website_cfn.yml \
                                  --stack-name website-rileychase-net \
                                  --no-fail-on-empty-changeset \
                                  --tags PROJECT=rileychase.net STAGE=production \
                                  --parameter-overrides \
                                    DomainName=${DOMAIN_NAME} \
                                    CertificateArn=${CERTIFICATE_ARN}

  aws:gh-actions:validate:
    desc: Validate the gha_role_cfn.yml CloudFormation template
    sources:
      - aws/gha_role_cfn.yml
    cmds:
      - aws cloudformation validate-template --template-body file://./aws/gha_role_cfn.yml

  aws:gh-actions:deploy:
    desc: Deploy the gha_role_cfn.yml CloudFormation template
    deps:
      - aws:gh-actions:validate
    cmds:
      - |
        aws cloudformation deploy --template-file ./aws/gha_role_cfn.yml \
                                  --stack-name github-actions-nadock-rileychase-net \
                                  --no-fail-on-empty-changeset \
                                  --capabilities CAPABILITY_IAM \
                                  --tags PROJECT=rileychase.net STAGE=production \
                                  --parameter-overrides \
                                    BucketName=${BUCKET_NAME} \
                                    DistributionID=${DISTRIBUTION_ID} \

  aws:acm:validate:
    desc: Validate the acm_cert_cfn.yml CloudFormation template
    sources:
      - aws/acm_cert_cfn.yml
    cmds:
      - aws cloudformation validate-template --template-body file://./aws/acm_cert_cfn.yml

  aws:acm:deploy:
    desc: Deploy the acm_cert_cfn.yml CloudFormation template
    deps:
      - aws:acm:validate
    cmds:
      - |
        aws --region us-east-1 cloudformation deploy --template-file ./aws/acm_cert_cfn.yml \
                                                     --stack-name website-rileychase-net-cert \
                                                     --no-fail-on-empty-changeset \
                                                     --capabilities CAPABILITY_IAM \
                                                     --tags PROJECT=rileychase.net STAGE=production \
                                                     --parameter-overrides \
                                                       DomainName=${DOMAIN_NAME} \
                                                       HostedZoneId=${HOSTED_ZONE_ID} \
